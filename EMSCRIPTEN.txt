source ~/Tensai/GitClone/emsdk/emsdk_env.sh

//-s ALLOW_MEMORY_GROWTH=1 ->>> allows the memory array to grow if needs be, but this involves a performance cost.
//--output_eol windows|linux
// --llvm-lto 1 -> Link Time Optimization (LTO) 
//--closure 1 ->  This can help with reducing the size of the non-generated (support/glue) JS code, and with startup. However it can break if you do not do proper Closure Compiler annotations and exports.
// -fno-rtti -fno-exceptions ->>> adds overhead that is sometimes not needed. For example, in Box2D neither rtti nor exceptions are needed, and if you build the source files with -fno-rtti -fno-exceptions then it shrinks the output by 15%
// -s DISABLE_EXCEPTION_CATCHING=0 -> Catching C++ exceptions (specifically, emitting catch blocks) is turned off by default in -O1 (and above). Due to how asm.js/wasm currently implement exceptions, this makes the code much smaller and faster (eventually, wasm should gain native support for exceptions, and not have this issue).
// -s AGGRESSIVE_VARIABLE_ELIMINATION=1 ->>> Aggressive variable elimination is an asm.js feature (not relevant for wasm) that attempts to remove variables whenever possible, even at the cost of increasing code size by duplicating expressions. This can improve speed in cases where you have extremely large functions. For example it can make sqlite (which has a huge interpreter loop with thousands of lines in it) 7% faster.
// -s INLINING_LIMIT=1 ->> Disable inlining



//BUILD DEVELOPMENT VERSION
em++ --std=c++17 --memory-init-file 1 --output_eol linux -s "BINARYEN_TRAP_MODE='clamp'" \
     -s DISABLE_DEPRECATED_FIND_EVENT_TARGET_BEHAVIOR=1 -s TOTAL_MEMORY=67108864 \
     WebMain.cpp GameController.cpp GlobalVariables.cpp \
     Factories/GameObjectFactory.cpp \
     GameObjects/DynamicGameObject.cpp GameObjects/Player.cpp GameObjects/Enemy.cpp \
     GameObjects/MenuButton.cpp GameObjects/AnimatedGraphic.cpp GameObjects/CollisionGameObject.cpp \
     GameObjects/Collider.cpp GameObjects/StaticGameObject.cpp \
     Levels/Level.cpp Levels/TileLayer.cpp Levels/LevelParser.cpp \
     Libs/tinyXml/tinyxml2.cpp Libs/base64/base64.cpp \
     Managers/TextureManager.cpp Managers/InputManager.cpp \
     States/StateParser.cpp States/MainMenuState.cpp States/GameStateMachine.cpp \
     States/PlayState.cpp States/PauseState.cpp States/GameOverState.cpp \
     -s USE_ZLIB=1 -s USE_LIBJPEG=1 -s USE_LIBPNG=1 \
     -s USE_OGG=1 -s USE_VORBIS=1 \
     -s USE_SDL=2 -s USE_SDL_IMAGE=2 -s SDL2_IMAGE_FORMATS='["png"]' \
     -s USE_SDL_MIXER=2 -s USE_SDL_TTF=2 \
     --preload-file ../Assets \
     -o ../WebBuild/index.html

     

//BUILD WASM O3 AND OTHERS  BEST OPTIMIZED ############################
em++ -O3 --std=c++17 --memory-init-file 1 --output_eol linux \
     -s INLINING_LIMIT=1 -flto -s WASM_OBJECT_FILES=0 \
     --closure 1 --llvm-opts 3 --llvm-lto 3 -s "BINARYEN_TRAP_MODE='clamp'" \
     WebMain.cpp GameController.cpp GlobalVariables.cpp \
     Factories/GameObjectFactory.cpp \
     GameObjects/DynamicGameObject.cpp GameObjects/Player.cpp GameObjects/Enemy.cpp \
     GameObjects/MenuButton.cpp GameObjects/AnimatedGraphic.cpp GameObjects/CollisionGameObject.cpp \
     GameObjects/Collider.cpp GameObjects/StaticGameObject.cpp \
     Levels/Level.cpp Levels/TileLayer.cpp Levels/LevelParser.cpp \
     Libs/tinyXml/tinyxml2.cpp Libs/base64/base64.cpp \
     Managers/TextureManager.cpp Managers/InputManager.cpp \
     States/StateParser.cpp States/MainMenuState.cpp States/GameStateMachine.cpp \
     States/PlayState.cpp States/PauseState.cpp States/GameOverState.cpp \
     -s USE_ZLIB=1 -s USE_LIBJPEG=1 -s USE_LIBPNG=1 \
     -s USE_OGG=1 -s USE_VORBIS=1 \
     -s USE_SDL=2 -s USE_SDL_IMAGE=2 -s SDL2_IMAGE_FORMATS='["png"]' \
     -s USE_SDL_MIXER=2 -s USE_SDL_TTF=2 \
     --preload-file ../Assets \
     -o ../WebBuild/WebBuild/index.html



//BUILD WASM O1
em++ -O1 --std=c++17 --memory-init-file 1 --output_eol linux \
     WebMain.cpp GameController.cpp GlobalVariables.cpp \
     Factories/GameObjectFactory.cpp \
     GameObjects/DynamicGameObject.cpp GameObjects/Player.cpp GameObjects/Enemy.cpp \
     GameObjects/MenuButton.cpp GameObjects/AnimatedGraphic.cpp GameObjects/CollisionGameObject.cpp \
     GameObjects/Collider.cpp GameObjects/StaticGameObject.cpp \
     Levels/Level.cpp Levels/TileLayer.cpp Levels/LevelParser.cpp \
     Libs/tinyXml/tinyxml2.cpp Libs/base64/base64.cpp \
     Managers/TextureManager.cpp Managers/InputManager.cpp \
     States/StateParser.cpp States/MainMenuState.cpp States/GameStateMachine.cpp \
     States/PlayState.cpp States/PauseState.cpp States/GameOverState.cpp \
     -s USE_ZLIB=1 -s USE_LIBJPEG=1 -s USE_LIBPNG=1 \
     -s USE_OGG=1 -s USE_VORBIS=1 \
     -s USE_SDL=2 -s USE_SDL_IMAGE=2 -s SDL2_IMAGE_FORMATS='["png"]' \
     -s USE_SDL_MIXER=2 -s USE_SDL_TTF=2 \
     --preload-file ../Assets \
     -o ../WebBuild/WebBuild/index.html



//BUILD WASM O3
em++ -O3 --std=c++17 --memory-init-file 1 --output_eol linux \
     WebMain.cpp GameController.cpp GlobalVariables.cpp \
     Factories/GameObjectFactory.cpp \
     GameObjects/DynamicGameObject.cpp GameObjects/Player.cpp GameObjects/Enemy.cpp \
     GameObjects/MenuButton.cpp GameObjects/AnimatedGraphic.cpp GameObjects/CollisionGameObject.cpp \
     GameObjects/Collider.cpp GameObjects/StaticGameObject.cpp \
     Levels/Level.cpp Levels/TileLayer.cpp Levels/LevelParser.cpp \
     Libs/tinyXml/tinyxml2.cpp Libs/base64/base64.cpp \
     Managers/TextureManager.cpp Managers/InputManager.cpp \
     States/StateParser.cpp States/MainMenuState.cpp States/GameStateMachine.cpp \
     States/PlayState.cpp States/PauseState.cpp States/GameOverState.cpp \
     -s USE_ZLIB=1 -s USE_LIBJPEG=1 -s USE_LIBPNG=1 \
     -s USE_OGG=1 -s USE_VORBIS=1 \
     -s USE_SDL=2 -s USE_SDL_IMAGE=2 -s SDL2_IMAGE_FORMATS='["png"]' \
     -s USE_SDL_MIXER=2 -s USE_SDL_TTF=2 \
     --preload-file ../Assets \
     -o ../WebBuild/WebBuild/index.html



//BUILD WASM WITH TOTAL_MEMORY
em++ -O3 --std=c++17 --memory-init-file 1 --output_eol linux -s TOTAL_MEMORY=67108864 \
     WebMain.cpp GameController.cpp GlobalVariables.cpp \
     Factories/GameObjectFactory.cpp \
     GameObjects/DynamicGameObject.cpp GameObjects/Player.cpp GameObjects/Enemy.cpp \
     GameObjects/MenuButton.cpp GameObjects/AnimatedGraphic.cpp GameObjects/CollisionGameObject.cpp \
     GameObjects/Collider.cpp GameObjects/StaticGameObject.cpp \
     Levels/Level.cpp Levels/TileLayer.cpp Levels/LevelParser.cpp \
     Libs/tinyXml/tinyxml2.cpp Libs/base64/base64.cpp \
     Managers/TextureManager.cpp Managers/InputManager.cpp \
     States/StateParser.cpp States/MainMenuState.cpp States/GameStateMachine.cpp \
     States/PlayState.cpp States/PauseState.cpp States/GameOverState.cpp \
     -s USE_ZLIB=1 -s USE_LIBJPEG=1 -s USE_LIBPNG=1 \
     -s USE_OGG=1 -s USE_VORBIS=1 \
     -s USE_SDL=2 -s USE_SDL_IMAGE=2 -s SDL2_IMAGE_FORMATS='["png"]' \
     -s USE_SDL_MIXER=2 -s USE_SDL_TTF=2 \
     --preload-file ../Assets \
     -o ../WebBuild/WebBuild/index.html



//BUILD ASM.JS
em++ -O3 --std=c++17 --memory-init-file 1 --output_eol linux -s TOTAL_MEMORY=67108864 \
     WebMain.cpp GameController.cpp GlobalVariables.cpp \
     Factories/GameObjectFactory.cpp \
     GameObjects/DynamicGameObject.cpp GameObjects/Player.cpp GameObjects/Enemy.cpp \
     GameObjects/MenuButton.cpp GameObjects/AnimatedGraphic.cpp GameObjects/CollisionGameObject.cpp \
     GameObjects/Collider.cpp GameObjects/StaticGameObject.cpp \
     Levels/Level.cpp Levels/TileLayer.cpp Levels/LevelParser.cpp \
     Libs/tinyXml/tinyxml2.cpp Libs/base64/base64.cpp \
     Managers/TextureManager.cpp Managers/InputManager.cpp \
     States/StateParser.cpp States/MainMenuState.cpp States/GameStateMachine.cpp \
     States/PlayState.cpp States/PauseState.cpp States/GameOverState.cpp \
     -s USE_ZLIB=1 -s USE_LIBJPEG=1 -s USE_LIBPNG=1 \
     -s USE_OGG=1 -s USE_VORBIS=1 \
     -s USE_SDL=2 -s USE_SDL_IMAGE=2 -s SDL2_IMAGE_FORMATS='["png"]' \
     -s USE_SDL_MIXER=2 -s USE_SDL_TTF=2 \
     --preload-file ../Assets \
     --separate-asm -s BINARYEN=1 -s WASM=0 -o ../WebBuild/WebBuild/index.html